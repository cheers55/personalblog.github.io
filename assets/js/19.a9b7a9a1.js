(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{337:function(t,_,a){"use strict";a.r(_);var s=a(33),v=Object(s.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"🌈-进程-线程的一个简单解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🌈-进程-线程的一个简单解释"}},[t._v("#")]),t._v(" 🌈 进程 && 线程的一个简单解释")]),t._v(" "),a("h2",{attrs:{id:"_1-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程"}},[t._v("#")]),t._v(" 1. 进程")]),t._v(" "),a("p",[a("code",[t._v("进程（process）")]),t._v("是程序的一次执行过程，是一个动态概念，是程序在执行过程中分配和管理资源的基本单位。")]),t._v(" "),a("h2",{attrs:{id:"_2-线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程"}},[t._v("#")]),t._v(" 2. 线程")]),t._v(" "),a("p",[a("code",[t._v("线程（thread）")]),t._v("是CPU调度和分派的基本单位，它可与同属一个进程的其他的线程共享进程所拥有的全部资源。")]),t._v(" "),a("h2",{attrs:{id:"_3-举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-举例"}},[t._v("#")]),t._v(" 3. 举例")]),t._v(" "),a("p",[t._v("为了方便大家更好的理解，举个小 🌰 ：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比如我们共同完成一个项目，这个项目就相当于开启了一个进程，项目中我们需要产品、UI、前端、后台来共同完成这个项目，这些角色分别独立完成自己的那部分工作就相当于线程。")])]),t._v(" "),a("li",[a("p",[t._v("前端负责写页面、后台负责开发接口，这个时候他们相当于是并发同时进行的。")])]),t._v(" "),a("li",[a("p",[t._v("联调的时候需要前端和后台共同配合完成任务，这个时候他们是配合进行的。")])]),t._v(" "),a("li",[a("p",[t._v("当完成这个项目后，项目的网址产品、UI、前端、后台都可以同时访问这个项目，相当于它可与同属一个进程的其他的线程共享进程所拥有的全部资源。")])])]),t._v(" "),a("h2",{attrs:{id:"_4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结"}},[t._v("#")]),t._v(" 4. 总结")]),t._v(" "),a("ol",[a("li",[t._v("进程是资源分配的最小单位，线程是程序执行的最小单位；")]),t._v(" "),a("li",[t._v("一个程序至少有一个进程，一个进程至少有一个线程；")]),t._v(" "),a("li",[t._v("同一个进程中的多个线程之间可以并发执行；")]),t._v(" "),a("li",[t._v("线程与线程之间又是相互独立的；")])])])}),[],!1,null,null,null);_.default=v.exports}}]);