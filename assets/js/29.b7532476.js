(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{348:function(t,s,n){"use strict";n.r(s);var a=n(33),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"🌈-js-基础面试题总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌈-js-基础面试题总结"}},[t._v("#")]),t._v(" 🌈 JS 基础面试题总结")]),t._v(" "),n("h2",{attrs:{id:"_1-javascript-的数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-javascript-的数据类型"}},[t._v("#")]),t._v(" 1. JavaScript 的数据类型")]),t._v(" "),n("h3",{attrs:{id:"基本数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("String、Number（浮点类型，基于IEEE 754）、Boolean、null、undefined、Symbol（独一无二）、BigInt（比Number范围更大的整数值）\n")])])]),n("h3",{attrs:{id:"引用数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("Object（Object、Function、Array）\n")])])]),n("h2",{attrs:{id:"_2-null-和-undefined-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-null-和-undefined-的区别"}},[t._v("#")]),t._v(" 2. null 和 undefined 的区别")]),t._v(" "),n("h3",{attrs:{id:"null"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[t._v("#")]),t._v(" null")]),t._v(" "),n("p",[n("code",[t._v("null")]),t._v('表示"没有对象"，即该处不应该有值。典型用法是：')]),t._v(" "),n("ol",[n("li",[t._v("作为函数的参数，表示该函数的参数不是对象；")]),t._v(" "),n("li",[t._v("作为对象原型链的终点；")])]),t._v(" "),n("h3",{attrs:{id:"undefined"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),n("p",[n("code",[t._v("undefined")]),t._v('表示"缺少值"，就是此处应该有一个值，但是还没有定义。典型用法是：')]),t._v(" "),n("ol",[n("li",[t._v("变量被声明了，但没有赋值（"),n("code",[t._v("var i;")]),t._v("）；")]),t._v(" "),n("li",[t._v("对象没有赋值的属性（"),n("code",[t._v("var obj = {}; console.log(obj.name);")]),t._v("）；")]),t._v(" "),n("li",[t._v("调用函数时，应该提供的参数没有提供（"),n("code",[t._v("function fun(obj){ console.log(obj); }; fun();")]),t._v("）；")]),t._v(" "),n("li",[t._v("函数没有返回值时（"),n("code",[t._v("var x = fun(); x;")]),t._v("）；")])]),t._v(" "),n("h2",{attrs:{id:"_3-typeof-和-instanceof-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-typeof-和-instanceof-的区别"}},[t._v("#")]),t._v(" 3. typeof 和 instanceof 的区别")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("typeof")])]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("instanceof")])]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("Object.prototype.toString().call()")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("用来判断基本数据类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("用来判断左边构造函数的 prototype 属性是否存在右边对象的原型链上")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("是对象的一个原生原型拓展函数，用来精确的区分数据类型")])])])]),t._v(" "),n("h2",{attrs:{id:"_4-为什么是-true？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么是-true？"}},[t._v("#")]),t._v(" 4. [] !== [] 为什么是 true？")]),t._v(" "),n("ul",[n("li",[t._v("下边是这个表达式为何为"),n("code",[t._v("true")]),t._v("的步骤：")])]),t._v(" "),n("ol",[n("li",[t._v("[] == ![];")]),t._v(" "),n("li",[t._v("[] == false;")]),t._v(" "),n("li",[t._v("[] == Number(false);")]),t._v(" "),n("li",[t._v("[] == 0;")]),t._v(" "),n("li",[t._v("[].toString() == 0;")]),t._v(" "),n("li",[t._v("0 == 0;")])]),t._v(" "),n("h2",{attrs:{id:"_5-原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-原型链"}},[t._v("#")]),t._v(" 5. 原型链")]),t._v(" "),n("ul",[n("li",[t._v("每个函数都有 "),n("code",[t._v("prototype")]),t._v(" 属性，该属性指向原型。每个对象都有 "),n("code",[t._v("__proto__")]),t._v(" 属性，指向了创建该对象的构造函数的原型，"),n("strong",[n("em",[t._v("其实这个属性指向了 [[prototype]] ，但是 [[prototype]] 是内部引擎属性，我们并不能访问到")])]),t._v("。所以用"),n("code",[t._v("__proto__")]),t._v("来访问。对象可以通过 "),n("code",[t._v("__proto__")]),t._v(" 来寻找不属于该对象的属性，"),n("code",[t._v("__proto__")]),t._v(" 将对象连接起来组成了原型链。")])]),t._v(" "),n("p",[n("img",{attrs:{src:"/prototype.jpg",alt:"原型链"}})]),t._v(" "),n("h2",{attrs:{id:"_6-new"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-new"}},[t._v("#")]),t._v(" 6. new")]),t._v(" "),n("ol",[n("li",[t._v("新生成了一个对象；")]),t._v(" "),n("li",[t._v("链接到原型；")]),t._v(" "),n("li",[t._v("绑定 this；")]),t._v(" "),n("li",[t._v("返回新对象；")])]),t._v(" "),n("ul",[n("li",[t._v("对于创建一个对象来说，更推荐使用字面量的方式创建对象。因为你使用 "),n("code",[t._v("new Object()")]),t._v(" 的方式创建对象需要通过作用域链一层层找到 "),n("code",[t._v("Object")]),t._v("，但是你使用字面量的方式就没这个问题。")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 这个字面量内部也是使用了 new Object()\nconst person = { name: cxh };\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("ul",[n("li",[t._v("对于"),n("code",[t._v("new")]),t._v("来说，还需要注意下运算符优先级。")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function Foo() {\n return this;\n};\n\nFoo.getName = function () {\n console.log('1');\n};\n\nFoo.prototype.getName = function () {\n console.log('2');\n};\n\nnew Foo.getName(); // -> 1\nnew Foo().getName(); // -> 2\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("ul",[n("li",[t._v("可以看出"),n("code",[t._v("new Foo()")]),t._v(" 的优先级大于 "),n("code",[t._v("new Foo")]),t._v(" ，所以对于上述代码来说可以这样划分执行顺序:")])]),t._v(" "),n("ol",[n("li",[t._v("new (Foo.getName());")]),t._v(" "),n("li",[t._v("(new Foo()).getName();")])]),t._v(" "),n("blockquote",[n("p",[t._v("对于第一个函数来说，先执行了 Foo.getName() ，所以结果为 1；对于后者来说，先执行 new Foo() 产生了一个实例，然后通过原型链找到了 Foo 上的 getName 函数，所以结果为 2。")])]),t._v(" "),n("h2",{attrs:{id:"_7-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-this"}},[t._v("#")]),t._v(" 7. this")]),t._v(" "),n("ul",[n("li",[t._v("一句话概括"),n("code",[t._v("this")]),t._v("，谁调用它它就指向谁。为了更好的理解"),n("code",[t._v("this")]),t._v("，做了一个小小的总结：")])]),t._v(" "),n("ol",[n("li",[t._v("在全局作用域内，this 指向 window；")]),t._v(" "),n("li",[t._v("在 class 中，this 指向新创建的类实例；")]),t._v(" "),n("li",[t._v("在函数中，分为两种函数。箭头函数，this 指向包裹箭头函数的第一个普通函数。普通函数中又分为两种。new 的方式，this 指向 new 出来的实例。直接调用，this 指向 window。间接调用，this 指向调用它的对象。")])]),t._v(" "),n("h2",{attrs:{id:"_8-apply、call、bind"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-apply、call、bind"}},[t._v("#")]),t._v(" 8. apply、call、bind")]),t._v(" "),n("ul",[n("li",[t._v("都是为了解决改变"),n("code",[t._v("this")]),t._v("的指向。这三个函数的第一个参数都是"),n("code",[t._v("this")]),t._v("的指向对象，第二个参数差别就来了：")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("call")])]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("apply")])]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("bind")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("后续参数用"),n("code",[t._v(",")]),t._v("号分隔，可传多个参数")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("后续参数用数组进行传参")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("和"),n("code",[t._v("call")]),t._v("的传参方式一致，但是会返回新的绑定函数，必须调用才会被执行")])])])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const person = {\n value: 1\n};\nfunction getValue(name, age) {\n    console.log(name);\n    console.log(age);\n    console.log(this.value);\n};\ngetValue.call(person, 'cxh', '18');\ngetValue.apply(person, ['cxh', '18']);\ngetValue.bind(person, 'cxh', '18')();\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("h3",{attrs:{id:"模拟实现-call-和-apply"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模拟实现-call-和-apply"}},[t._v("#")]),t._v(" 模拟实现 call 和 apply")]),t._v(" "),n("ul",[n("li",[t._v("可以从以下几点来考虑如何实现：")])]),t._v(" "),n("ol",[n("li",[t._v("不传入第一个参数，那么默认为"),n("code",[t._v("window")]),t._v("；")]),t._v(" "),n("li",[t._v("改变了"),n("code",[t._v("this")]),t._v("指向，让新的对象可以执行该函数;")])]),t._v(" "),n("p",[n("strong",[t._v("那么思路是否可以变成给新的对象添加一个函数，执行完以后删除。")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// call\nFunction.prototype._bind = function(context){\n    // 不传入第一个参数，那么默认为window\n    const context = context || window;\n    // 给新的对象添加一个函数，改变this指向\n    context.fn = this;\n    // 将context后面的参数取出来\n    let args = [...arguments].slice(1);\n    // 让新的对象可以执行该函数\n    const result = context.fn(...args);\n    // 执行完以后删除\n    delete context.fn;\n    return result;\n};\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// apply\nFunction.prototype._apply = function(context){\n    const context = context || window;\n    context.fn = this;\n    let result;\n    // 需要判断是否存储第二个参数\n    // 如果存在，就将第二个参数展开\n    if(arguments[1]){\n        result = context.fn(...arguments[1]);\n    } else {\n        result = context.fn();\n    }\n    delete context.fn;\n    return result;\n};\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("ul",[n("li",[t._v("bind 实现的思路大致如下：")])]),t._v(" "),n("ol",[n("li",[t._v("会返回一个新的函数；")]),t._v(" "),n("li",[t._v("在 bind() 被调用时，这个新函数的 this 被指定为 bind() 的第一个参数，而其余参数将作为新函数的参数，供调用时使用；")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// bind\nFunction.prototype._bind = function(context){\n    // 判断当前的this类型必须是函数可以调用\n    if(typeof this !== "function"){\n        throw new TypeError("试图绑定的内容是不可调用的");\n    };\n    const _this = this;\n    let args = [...arguments].slice(1);\n    // 返回一个函数\n    return function boundFunc(){\n        // 因为返回了一个函数，我们可以 new boundFunc()，所以需要判断\n        if(this instanceof boundFunc){\n            return new _this(...args, ...arguments);\n        }\n        return _this.apply(context, args.concat(...arguments));\n    }\n};\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("h2",{attrs:{id:"_9-闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-闭包"}},[t._v("#")]),t._v(" 9. 闭包")]),t._v(" "),n("ul",[n("li",[t._v("闭包的定义很简单：函数 A 返回了一个函数 B，并且函数 B 中使用了函数 A 的变量，函数 B 就被称为闭包。举个简单的例子：")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function A(){\n    let a = 1;\n    return function B(){\n        a++;\n        console.log(a);\n    }\n};\n\nlet add = A();\nadd(); // -> 2\nadd(); // -> 3\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("ul",[n("li",[t._v("为什么"),n("code",[t._v("函数A")]),t._v("已经弹出调用栈，"),n("code",[t._v("函数B")]),t._v("还能引用"),n("code",[t._v("函数A")]),t._v("中的变量。"),n("strong",[t._v("因为函数 A 中的变量这时候是存储在堆上的")]),t._v("。经典面试题：")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("for(var i = 1; i <= 5; i++){\n    setTimeout(function(){\n        console.log(i);\n    }, i*1000);\n}; // 每隔1秒输出一个6，一共5次\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("blockquote",[n("p",[t._v("因为 setTimeout 是个异步函数，所有会先把循环全部执行完毕，这时候 i 就是 6 了。")])]),t._v(" "),n("ul",[n("li",[t._v("解决方法有"),n("code",[t._v("4")]),t._v("种，另外一种采用"),n("code",[t._v("innerHTML")]),t._v("就不例举了，自行百度一下：")])]),t._v(" "),n("ol",[n("li",[t._v("闭包；")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("for(var i = 1; i <= 5; i++){\n    (function(i){\n        setTimeout(function(){\n            console.log(i);\n        }, i*1000);\n    })(i);\n};\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("let（块级作用域）；")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("for(let i = 1; i <= 5; i++){\n    setTimeout(function(){\n        console.log(i);\n    }, i*1000);\n};\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("setTimeout 的第三个参数；")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("for ( var i=1; i<=5; i++) {\n    setTimeout( function timer(j) {\n        console.log( j );\n    }, i*1000, i);\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h2",{attrs:{id:"_10-浅拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-浅拷贝"}},[t._v("#")]),t._v(" 10. 浅拷贝")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let a = {\n    age: 1\n};\nlet b = a;\na.age = 2;\nconsole.log(b.age); // -> 2\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("ul",[n("li",[t._v("上述例子可以发其中一方改变，另一方也会相应改变。**因为他们指向同一个引用。**我们可以使用"),n("code",[t._v("两种")]),t._v("方法解决这个问题：")])]),t._v(" "),n("ol",[n("li",[t._v("Object.assign；")]),t._v(" "),n("li",[t._v("展开运算符（...）；")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let a = {\n    age: 1\n};\nlet b = Object.assign({}, a);\na.age = 2;\nconsole.log(b.age); // -> 1\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let a= {\n    age: 1\n};\nlet b= {...a};\na.age = 2;\nconsole.log(b.age); // -> 1\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("ul",[n("li",[t._v("如果我们现在在"),n("code",[t._v("a对象")]),t._v("中再加一层，看看浅拷贝是否还可以解决以上问题：")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("let a = {\n    age: 1,\n    jobs: {\n        first: 'alipay'\n    };\n};\nlet b = {...a};\na.jobs.first = 'tencent';\nconsole.log(b.jobs.first) // -> tencent\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("ul",[n("li",[t._v("我们发现浅拷贝只是解决了第一层的问题，如果接下来的值中还有对象的话，要解决这个问题，我们就需要引入深拷贝了。")])]),t._v(" "),n("blockquote",[n("p",[t._v("关于深拷贝由于篇幅太长，可以移驾到我的另一篇 "),n("a",{attrs:{href:"deepClone"}},[t._v("深拷贝")]),t._v(" 去继续探索。")])]),t._v(" "),n("h2",{attrs:{id:"_11-http1-0、http1-1、http2-0-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-http1-0、http1-1、http2-0-的区别"}},[t._v("#")]),t._v(" 11. http1.0、http1.1、http2.0 的区别")]),t._v(" "),n("h2",{attrs:{id:"_12-get-和-post-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-get-和-post-的区别"}},[t._v("#")]),t._v(" 12. GET 和 POST 的区别")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("GET")])]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("POST")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("后续参数用"),n("code",[t._v(",")]),t._v("号分隔，可传多个参数")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("后续参数用数组进行传参")])])])]),t._v(" "),n("h2",{attrs:{id:"_13-http-状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-http-状态码"}},[t._v("#")]),t._v(" 13. http 状态码")]),t._v(" "),n("h2",{attrs:{id:"_14-标准盒模型（w3c-盒模型）和-ie-盒模型（怪异盒模型）的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-标准盒模型（w3c-盒模型）和-ie-盒模型（怪异盒模型）的区别"}},[t._v("#")]),t._v(" 14. 标准盒模型（w3c 盒模型）和 IE 盒模型（怪异盒模型）的区别")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("标准盒模型（w3c 盒模型）")])]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("IE 盒模型（怪异盒模型）")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("box-sizing: content-box;")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("box-sizing: border-box;")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("content（width、height）")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("content（width、height）包括 padding、border")])])])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("标准盒模型（w3c 盒模型）")]),t._v("如下图：")])]),t._v(" "),n("p",[n("img",{attrs:{src:"/content_box.png",alt:"标准盒模型（w3c 盒模型）"}})]),t._v(" "),n("ul",[n("li",[n("code",[t._v("IE 盒模型（怪异盒模型）")]),t._v("如下图：")])]),t._v(" "),n("p",[n("img",{attrs:{src:"/border_box.png",alt:"IE 盒模型（怪异盒模型）"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);