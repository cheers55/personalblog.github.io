(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{367:function(e,a,s){"use strict";s.r(a);var t=s(45),v=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"红宝石4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#红宝石4"}},[e._v("#")]),e._v(" 红宝石4")]),e._v(" "),s("h2",{attrs:{id:"_1-什么是-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-javascript"}},[e._v("#")]),e._v(" 1. 什么是 JavaScript")]),e._v(" "),s("p",[e._v("完整的 JavaScript 实现包含以下几个部分：")]),e._v(" "),s("ul",[s("li",[e._v("核心(ECMAScript262)：由 ECMA-262 定义并提供核心功能；")]),e._v(" "),s("li",[e._v("文档对象模型(DOM Document Object Model)：提供与网页内容交互的方法和接口；")]),e._v(" "),s("li",[e._v("浏览器对象模型(BOM Bower Object Model)：提供与浏览器交互的方法和接口；")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/javascript.png",alt:""}})]),e._v(" "),s("h2",{attrs:{id:"_2-html-中的-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-html-中的-javascript"}},[e._v("#")]),e._v(" 2. HTML 中的 JavaScript")]),e._v(" "),s("p",[e._v("将 "),s("code",[e._v("JavaScript")]),e._v(" 插入 "),s("code",[e._v("HTML")]),e._v(" 的主要方法是使用 "),s("strong",[e._v("script")]),e._v(" 元素。"),s("strong",[e._v("script")]),e._v(" 元素几个重要的属性：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("async")]),e._v("：表示脚本不需要等待其他脚本，同时也不阻塞文档渲染，即异步加载。异步脚本不能保证按照它们在页面中出现的次序执行；")]),e._v(" "),s("li",[s("code",[e._v("defer")]),e._v("：把脚本推迟到文档渲染完毕后再执行。推迟的脚本原则上按照它们被列出的次序执行；")]),e._v(" "),s("li",[s("code",[e._v("src")]),e._v("：表示包含要执行的代码的外部文件；")])]),e._v(" "),s("p",[e._v("对不推迟执行的脚本，浏览器必须解释完位于 "),s("strong",[e._v("script")]),e._v(" 元素中的代码，然后才能继续渲染页面的剩余部分。为此，通常应该把 "),s("strong",[e._v("script")]),e._v(" 元素放到页面末尾，介于主内容之后及 "),s("code",[e._v("</body>")]),e._v(" 标签 之前。否则会出现以下问题：")]),e._v(" "),s("ul",[s("li",[e._v("浏览器窗口完全空白，"),s("strong",[e._v("原因")]),e._v("：必须把所有 "),s("strong",[e._v("JavaScript")]),e._v(" 代码都"),s("strong",[e._v("下载、解析和解释")]),e._v("完成后，才能开始渲染页面。对于需要很多 "),s("strong",[e._v("JavaScript")]),e._v(" 的页面，这会导致页面渲染的明显延迟。")])]),e._v(" "),s("h2",{attrs:{id:"_3-语言基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-语言基础"}},[e._v("#")]),e._v(" 3. 语言基础")]),e._v(" "),s("h3",{attrs:{id:"_3-1-1-变量-var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-变量-var"}},[e._v("#")]),e._v(" 3.1.1 变量 - var")]),e._v(" "),s("p",[e._v("要定义变量，可以使用 "),s("code",[e._v("var")]),e._v(" 操作符(注意 var 是一个关键字)，后跟变量名(即标识符，如前所述)。")]),e._v(" "),s("blockquote",[s("p",[e._v("注意点：这个关键字声明的变量会自动提升到函数作用域顶部。俗称”变量提升“。")])]),e._v(" "),s("h3",{attrs:{id:"_3-1-2-变量-let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-变量-let"}},[e._v("#")]),e._v(" 3.1.2 变量 - let")]),e._v(" "),s("p",[s("code",[e._v("let")]),e._v(" 跟 "),s("code",[e._v("var")]),e._v(" 的作用差不多，但有着非常重要的区别。最明显的区别是，"),s("code",[e._v("let")]),e._v(" 声明的范围是块作用域， 而 "),s("code",[e._v("var")]),e._v(" 声明的范围是函数作用域。")]),e._v(" "),s("p",[s("strong",[e._v("1. 暂时性死区")])]),e._v(" "),s("p",[e._v("let 声明的变量不会在作用域中被提升。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// name 会被提升 \nconsole.log(name); // undefined \nvar name = 'Matt';\n\n// age 不会被提升\nconsole.log(age); // ReferenceError:age 没有定义 \nlet age = 26;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[s("strong",[e._v("2. 全局声明")])]),e._v(" "),s("p",[e._v("与 "),s("code",[e._v("var")]),e._v(" 关键字不同，使用 "),s("code",[e._v("let")]),e._v(" 在全局作用域中声明的变量不会成为 "),s("code",[e._v("window")]),e._v(" 对象的属性(var 声 明的变量则会)。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var name = 'Matt'; \nconsole.log(window.name); // 'Matt'\n\nlet age = 26;\nconsole.log(window.age); // undefined\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"_3-1-3-变量-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-变量-const"}},[e._v("#")]),e._v(" 3.1.3 变量 - const")]),e._v(" "),s("p",[s("code",[e._v("const")]),e._v(" 的行为与 "),s("code",[e._v("let")]),e._v(" 基本相同，唯一一个重要的区别是用它声明变量时必须同时初始化变量，且尝试修改 "),s("code",[e._v("const")]),e._v(" 声明的变量会导致运行时错误。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const age = 26;\nage = 36; // TypeError\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("code",[e._v("const")]),e._v(" 声明的限制只适用于它指向的变量的引用。换句话说，如果 "),s("code",[e._v("const")]),e._v(" 变量引用的是一个对象，那么修改这个对象内部的属性并不违反 "),s("code",[e._v("const")]),e._v(" 的限制。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const person = {};\nperson.name = 'Matt'; // ok\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h3",{attrs:{id:"_3-1-4-变量-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-变量-总结"}},[e._v("#")]),e._v(" 3.1.4 变量 - 总结")]),e._v(" "),s("p",[s("strong",[e._v("1. 不使用 var")])]),e._v(" "),s("p",[e._v("有了 "),s("code",[e._v("let")]),e._v(" 和 "),s("code",[e._v("const")]),e._v("，大多数开发者会发现自己不再需要 "),s("code",[e._v("var")]),e._v(" 了。限制自己只使用 "),s("code",[e._v("let")]),e._v(" 和 "),s("code",[e._v("const")]),e._v(" 有助于提升代码质量，因为变量有了明确的作用域、声明位置，以及不变的值。")]),e._v(" "),s("p",[s("strong",[e._v("2. const 优先，let 次之")])]),e._v(" "),s("p",[e._v("使用 "),s("code",[e._v("const")]),e._v(" 声明可以让浏览器运行时强制保持变量不变，也可以让静态代码分析工具提前发现不合法的赋值操作。同时也能迅速发现因意外赋值导致的非预期行为。")]),e._v(" "),s("h3",{attrs:{id:"_3-2-1-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-数据类型"}},[e._v("#")]),e._v(" 3.2.1 数据类型")]),e._v(" "),s("p",[e._v("简单数据类型："),s("code",[e._v("Undefined、Null、Boolean、Number、String 和 Symbol")]),e._v("。")]),e._v(" "),s("p",[e._v("复杂数据类型："),s("code",[e._v("Object")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"_3-2-2-typeof操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-typeof操作符"}},[e._v("#")]),e._v(" 3.2.2 typeof操作符")]),e._v(" "),s("p",[e._v("确定任意变量的数据类型。")]),e._v(" "),s("blockquote",[s("p",[e._v('注意：typeof null 返回的是"object"。这是因为特殊值 null 被认为是一个对空对象的引用。')])]),e._v(" "),s("h3",{attrs:{id:"_3-2-3-undefined类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-undefined类型"}},[e._v("#")]),e._v(" 3.2.3 Undefined类型")]),e._v(" "),s("p",[e._v("当使用 "),s("code",[e._v("var")]),e._v(" 或 "),s("code",[e._v("let")]),e._v(" 声明了变量但没有初始化时，就相当于给变量赋予了 "),s("code",[e._v("undefined")]),e._v(" 值。")]),e._v(" "),s("h3",{attrs:{id:"_3-2-4-null类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-null类型"}},[e._v("#")]),e._v(" 3.2.4 Null类型")]),e._v(" "),s("p",[s("code",[e._v("null")]),e._v(" 值表示一个空对象指针，这也是给 "),s("code",[e._v("typeof")]),e._v(" 传一个 "),s("code",[e._v("null")]),e._v(' 会返回"object"的原因。在定义将来要保存对象值的变量时，建议使用 '),s("code",[e._v("null")]),e._v(" 来初始化，不要使用其他值。")]),e._v(" "),s("h3",{attrs:{id:"_3-2-5-boolean类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-boolean类型"}},[e._v("#")]),e._v(" 3.2.5 Boolean类型")]),e._v(" "),s("p",[e._v("有两个字面值："),s("code",[e._v("true")]),e._v(" 和 "),s("code",[e._v("false")]),e._v("。")]),e._v(" "),s("blockquote",[s("p",[e._v("注意：不同类型与布尔值之间存在隐式转换。非空字符串、非0、任意对象会被转换为 true。空（''）、零（0、NaN）、空对象（null）、undefined会被转换为 false。")])]),e._v(" "),s("h3",{attrs:{id:"_3-2-6-number类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-number类型"}},[e._v("#")]),e._v(" 3.2.6 Number类型")]),e._v(" "),s("p",[s("code",[e._v("Number")]),e._v(" 类型使用 "),s("code",[e._v("IEEE 754")]),e._v(" 格式表示整数和浮点值(在某些语言中也叫双精度值)。")]),e._v(" "),s("p",[s("strong",[e._v("1. 数值转换 - Number()函数")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('Number(true) = 1; Number(false) = 0; // 布尔值\nNumber(123) = 123 // 数值;\nNumber(null) = 0 // null;\nNumber(undefined) = NaN // undefined类型;\nNumber("123") = 123; Number("0123") = 123; Number("1.1") = 1.1; Number(" ") = 0; Number("Hello") = NaN; // 字符串\n对象：调用 valueOf()方法，并按照上述规则转换返回的值。如果转换结果是 NaN，则调用 toString()方法，再按照转换字符串的规则转换。\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[s("strong",[e._v("2. 数值转换 - parseInt()函数")])]),e._v(" "),s("p",[e._v("通常在需要得到整数时可以优先使用。也接收第二个参数，用于指定底数(进制数)。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('parseInt("123cheers") = 123;\nparseInt("") = NaN;\nparseInt(22.5) = 22;\nparseInt("10", 10) = 10; // 按十进制解析\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[s("strong",[e._v("3. 数值转换 - parseFloat()函数")])]),e._v(" "),s("p",[e._v("解析到一个无效的浮点数值字符为止。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('parseInt("123cheers") = 123;\nparseInt("") = NaN;\nparseInt(22.5) = 22.5;\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h3",{attrs:{id:"_3-2-7-string类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-7-string类型"}},[e._v("#")]),e._v(" 3.2.7 String类型")])])}),[],!1,null,null,null);a.default=v.exports}}]);