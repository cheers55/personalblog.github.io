(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{343:function(s,e,t){"use strict";t.r(e);var a=t(33),v=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"🌈-v-show-与-v-if-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🌈-v-show-与-v-if-的区别"}},[s._v("#")]),s._v(" 🌈 v-show 与 v-if 的区别")]),s._v(" "),t("h2",{attrs:{id:"_1-v-show"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-show"}},[s._v("#")]),s._v(" 1. v-show")]),s._v(" "),t("p",[s._v("不管初始的条件是什么，元素总是会被渲染，并且只是简单的基于 CSS "),t("code",[s._v("display: none")]),s._v(" 或者 "),t("code",[s._v("display: block")]),s._v(" 的属性进行切换。")]),s._v(" "),t("h2",{attrs:{id:"_2-v-if"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-v-if"}},[s._v("#")]),s._v(" 2. v-if")]),s._v(" "),t("p",[s._v("会根据初始的条件（data里自己的定义的数据）来进行真正的渲染（组件真正的销毁和重建），如果条件为"),t("strong",[s._v("真")]),s._v("，才会开始渲染条件块，如果条件为"),t("strong",[s._v("假")]),s._v("，则不会渲染条件块。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("注意：")]),s._v(" "),t("code",[s._v("v-if")]),s._v("不要和"),t("code",[s._v("v-for")]),s._v("一起使用！")]),s._v(" "),t("blockquote",[t("p",[s._v("当和 "),t("code",[s._v("v-for")]),s._v(" 一起使用时，"),t("code",[s._v("v-for")]),s._v(" 的优先级比 "),t("code",[s._v("v-if")]),s._v(" 更高，详见 "),t("a",{attrs:{href:"https://vuejs.bootcss.com/api/#v-for",target:"_blank",rel:"noopener noreferrer"}},[s._v("vue官网关于 v-for 的详细描述"),t("OutboundLink")],1),s._v(" ，为什么不能一起使用，以下我用代码来解释一下。")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<ul>\n  <li\n      v-for = "(item, index) in list"\n      v-if = "isActive"\n      :key = "item.id"\n  >\n    {{ item.name }}\n  </li>\n</ul>\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("以上代码将会经过如下运算")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("this.list.map( user=> {\n  if (isActive) {\n    return user.name\n  }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("因此，哪怕我们只渲染一小部分元素，也得在每次重新渲染的时候遍历整个列表，不论 "),t("code",[s._v("isActive")]),s._v(" 是否发生了变化。如果 "),t("code",[s._v("list")]),s._v(" 的数据有很多，就会造成性能低，页面可能卡顿的现象出现。")]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[t("code",[s._v("v-show")]),s._v(" 适合于需要频繁切换条件的场景。"),t("code",[s._v("v-if")]),s._v(" 适合于不需要频繁切换条件的场景。")])])}),[],!1,null,null,null);e.default=v.exports}}]);