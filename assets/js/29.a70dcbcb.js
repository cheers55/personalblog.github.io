(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{356:function(s,n,a){"use strict";a.r(n);var t=a(33),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"🌈-js-基础面试题总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🌈-js-基础面试题总结"}},[s._v("#")]),s._v(" 🌈 JS 基础面试题总结")]),s._v(" "),a("h2",{attrs:{id:"_1-javascript-的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-javascript-的数据类型"}},[s._v("#")]),s._v(" 1. JavaScript 的数据类型")]),s._v(" "),a("h3",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("String、Number（浮点类型，基于IEEE 754）、Boolean、null、undefined、Symbol（独一无二）、BigInt（比Number范围更大的整数值）\n")])])]),a("h3",{attrs:{id:"引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[s._v("#")]),s._v(" 引用数据类型")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("Object（Object、Function、Array）\n")])])]),a("h2",{attrs:{id:"_2-null-和-undefined-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-null-和-undefined-的区别"}},[s._v("#")]),s._v(" 2. null 和 undefined 的区别")]),s._v(" "),a("h3",{attrs:{id:"null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[s._v("#")]),s._v(" null")]),s._v(" "),a("p",[a("code",[s._v("null")]),s._v('表示"没有对象"，即该处不应该有值。典型用法是：')]),s._v(" "),a("ol",[a("li",[s._v("作为函数的参数，表示该函数的参数不是对象；")]),s._v(" "),a("li",[s._v("作为对象原型链的终点；")])]),s._v(" "),a("h3",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[s._v("#")]),s._v(" undefined")]),s._v(" "),a("p",[a("code",[s._v("undefined")]),s._v('表示"缺少值"，就是此处应该有一个值，但是还没有定义。典型用法是：')]),s._v(" "),a("ol",[a("li",[s._v("变量被声明了，但没有赋值（"),a("code",[s._v("var i;")]),s._v("）；")]),s._v(" "),a("li",[s._v("对象没有赋值的属性（"),a("code",[s._v("var obj = {}; console.log(obj.name);")]),s._v("）；")]),s._v(" "),a("li",[s._v("调用函数时，应该提供的参数没有提供（"),a("code",[s._v("function fun(obj){ console.log(x); }; fun();")]),s._v("）；")]),s._v(" "),a("li",[s._v("函数没有返回值时（"),a("code",[s._v("var x = fun(); x;")]),s._v("）；")])]),s._v(" "),a("h2",{attrs:{id:"_3-typeof-和-instanceof-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-typeof-和-instanceof-的区别"}},[s._v("#")]),s._v(" 3. typeof 和 instanceof 的区别")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[a("strong",[s._v("typeof")])]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("strong",[s._v("instanceof")])]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("strong",[s._v("Object.prototype.toString().call()")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("用来判断基本数据类型")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("用来判断左边构造函数的 prototype 属性是否存在右边对象的原型链上")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("是对象的一个原生原型拓展函数，用来精确的区分数据类型")])])])]),s._v(" "),a("h2",{attrs:{id:"_4-为什么是-true？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么是-true？"}},[s._v("#")]),s._v(" 4. [] !== [] 为什么是 true？")]),s._v(" "),a("ul",[a("li",[s._v("下边是这个表达式为何为"),a("code",[s._v("true")]),s._v("的步骤：")])]),s._v(" "),a("ol",[a("li",[s._v("[] == ![];")]),s._v(" "),a("li",[s._v("[] == false;")]),s._v(" "),a("li",[s._v("[] == Number(false);")]),s._v(" "),a("li",[s._v("[] == 0;")]),s._v(" "),a("li",[s._v("[].toString() == 0;")]),s._v(" "),a("li",[s._v("0 == 0;")])]),s._v(" "),a("h2",{attrs:{id:"_5-原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-原型链"}},[s._v("#")]),s._v(" 5. 原型链")]),s._v(" "),a("ul",[a("li",[s._v("每个函数都有 "),a("code",[s._v("prototype")]),s._v(" 属性，该属性指向原型。每个对象都有 "),a("code",[s._v("__proto__")]),s._v(" 属性，指向了创建该对象的构造函数的原型，"),a("strong",[a("em",[s._v("其实这个属性指向了 [[prototype]] ，但是 [[prototype]] 是内部引擎属性，我们并不能访问到")])]),s._v("。所以用"),a("code",[s._v("__proto__")]),s._v("来访问。对象可以通过 "),a("code",[s._v("__proto__")]),s._v(" 来寻找不属于该对象的属性，"),a("code",[s._v("__proto__")]),s._v(" 将对象连接起来组成了原型链。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/prototype.jpg",alt:"原型链"}})]),s._v(" "),a("h2",{attrs:{id:"_6-new"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-new"}},[s._v("#")]),s._v(" 6. new")]),s._v(" "),a("ol",[a("li",[s._v("新生成了一个对象；")]),s._v(" "),a("li",[s._v("链接到原型；")]),s._v(" "),a("li",[s._v("绑定 this；")]),s._v(" "),a("li",[s._v("返回新对象；")])]),s._v(" "),a("ul",[a("li",[s._v("对于创建一个对象来说，更推荐使用字面量的方式创建对象。因为你使用 "),a("code",[s._v("new Object()")]),s._v(" 的方式创建对象需要通过作用域链一层层找到 "),a("code",[s._v("Object")]),s._v("，但是你使用字面量的方式就没这个问题。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 这个字面量内部也是使用了 new Object()\nconst person = { name: cxh };\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("对于"),a("code",[s._v("new")]),s._v("来说，还需要注意下运算符优先级。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Foo() {\n return this;\n};\n\nFoo.getName = function () {\n console.log('1');\n};\n\nFoo.prototype.getName = function () {\n console.log('2');\n};\n\nnew Foo.getName(); // -> 1\nnew Foo().getName(); // -> 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ul",[a("li",[s._v("可以看出"),a("code",[s._v("new Foo()")]),s._v(" 的优先级大于 "),a("code",[s._v("new Foo")]),s._v(" ，所以对于上述代码来说可以这样划分执行顺序:")])]),s._v(" "),a("ol",[a("li",[s._v("new (Foo.getName());")]),s._v(" "),a("li",[s._v("(new Foo()).getName();")])]),s._v(" "),a("blockquote",[a("p",[s._v("对于第一个函数来说，先执行了 Foo.getName() ，所以结果为 1；对于后者来说，先执行 new Foo() 产生了一个实例，然后通过原型链找到了 Foo 上的 getName 函数，所以结果为 2。")])]),s._v(" "),a("h2",{attrs:{id:"_7-this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-this"}},[s._v("#")]),s._v(" 7. this")]),s._v(" "),a("ul",[a("li",[s._v("一句话概括"),a("code",[s._v("this")]),s._v("，谁调用它它就指向谁。为了更好的理解"),a("code",[s._v("this")]),s._v("，做了一个小小的总结：")])]),s._v(" "),a("ol",[a("li",[s._v("在全局作用域内，this 指向 window；")]),s._v(" "),a("li",[s._v("在 class 中，this 指向新创建的类实例；")]),s._v(" "),a("li",[s._v("在函数中，分为两种函数。箭头函数，this 指向包裹箭头函数的第一个普通函数。普通函数中又分为两种。new 的方式，this 指向 new 出来的实例。直接调用，this 指向 window。间接调用，this 指向调用它的对象。")])]),s._v(" "),a("h2",{attrs:{id:"_8-apply、call、bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-apply、call、bind"}},[s._v("#")]),s._v(" 8. apply、call、bind")]),s._v(" "),a("ul",[a("li",[s._v("都是为了解决改变"),a("code",[s._v("this")]),s._v("的指向。这三个函数的第一个参数都是"),a("code",[s._v("this")]),s._v("的指向对象，第二个参数差别就来了：")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[a("strong",[s._v("call")])]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("strong",[s._v("apply")])]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("strong",[s._v("bind")])])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("后续参数用"),a("code",[s._v(",")]),s._v("号分隔，可传多个参数")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("后续参数用数组进行传参")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("和"),a("code",[s._v("call")]),s._v("的传参方式一致，但是会返回新的绑定函数，必须调用才会被执行")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const person = {\n value: 1\n};\nfunction getValue(name, age) {\n    console.log(name);\n    console.log(age);\n    console.log(this.value);\n};\ngetValue.call(person, 'cxh', '18');\ngetValue.apply(person, ['cxh', '18']);\ngetValue.bind(person, 'cxh', '18')();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"模拟实现call和apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟实现call和apply"}},[s._v("#")]),s._v(" 模拟实现call和apply")]),s._v(" "),a("ul",[a("li",[s._v("可以从以下几点来考虑如何实现：")])]),s._v(" "),a("ol",[a("li",[s._v("不传入第一个参数，那么默认为"),a("code",[s._v("window")]),s._v("；")]),s._v(" "),a("li",[s._v("改变了"),a("code",[s._v("this")]),s._v("指向，让新的对象可以执行该函数;")])]),s._v(" "),a("p",[a("strong",[s._v("那么思路是否可以变成给新的对象添加一个函数，执行完以后删除。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// call\nFunction.prototype._bind = function(context){\n    // 不传入第一个参数，那么默认为window\n    const context = context || window;\n    // 给新的对象添加一个函数，改变this指向\n    context.fn = this;\n    // 将context后面的参数取出来\n    let args = [...arguments].slice(1);\n    // 让新的对象可以执行该函数\n    const result = context.fn(...args);\n    // 执行完以后删除\n    delete context.fn;\n    return result;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// apply\nFunction.prototype._apply = function(context){\n    const context = context || window;\n    context.fn = this;\n    let result;\n    // 需要判断是否存储第二个参数\n    // 如果存在，就将第二个参数展开\n    if(arguments[1]){\n        result = context.fn(...arguments[1]);\n    } else {\n        result = context.fn();\n    }\n    delete context.fn;\n    return result;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("bind实现的思路大致如下：")])]),s._v(" "),a("ol",[a("li",[s._v("会返回一个新的函数；")]),s._v(" "),a("li",[s._v("在 bind() 被调用时，这个新函数的 this 被指定为 bind() 的第一个参数，而其余参数将作为新函数的参数，供调用时使用；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// bind\nFunction.prototype._bind = function(context){\n    // 判断当前的this类型必须是函数可以调用\n    if(typeof this !== "function"){\n        throw new TypeError("试图绑定的内容是不可调用的");\n    };\n    const _this = this;\n    let args = [...arguments].slice(1);\n    // 返回一个函数\n    return function boundFunc(){\n        // 因为返回了一个函数，我们可以 new boundFunc()，所以需要判断\n        if(this instanceof boundFunc){\n            return new _this(...args, ...arguments);\n        }\n        return _this.apply(context, args.concat(...arguments));\n    }\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"_9-闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-闭包"}},[s._v("#")]),s._v(" 9. 闭包")]),s._v(" "),a("ul",[a("li",[s._v("闭包的定义很简单：函数 A 返回了一个函数 B，并且函数 B 中使用了函数 A 的变量，函数 B 就被称为闭包。举个简单的例子：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function A(){\n    let a = 1;\n    return function B(){\n        a++;\n        console.log(a);\n    }\n};\n\nlet add = A();\nadd(); // -> 2\nadd(); // -> 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ul",[a("li",[s._v("为什么"),a("code",[s._v("函数A")]),s._v("已经弹出调用栈，"),a("code",[s._v("函数B")]),s._v("还能引用"),a("code",[s._v("函数A")]),s._v("中的变量。"),a("strong",[s._v("因为函数 A 中的变量这时候是存储在堆上的")]),s._v("。经典面试题：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for(var i = 1; i <= 5; i++){\n    setTimeout(function(){\n        console.log(i);\n    }, i*1000);\n}; // 每隔1秒输出一个6，一共5次\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("因为 setTimeout 是个异步函数，所有会先把循环全部执行完毕，这时候 i 就是 6 了。")])]),s._v(" "),a("ul",[a("li",[s._v("解决方法有"),a("code",[s._v("4")]),s._v("种，另外一种采用"),a("code",[s._v("innerHTML")]),s._v("就不例举了，自行百度一下：")])]),s._v(" "),a("ol",[a("li",[s._v("闭包；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for(var i = 1; i <= 5; i++){\n    (function(i){\n        setTimeout(function(){\n            console.log(i);\n        }, i*1000);\n    })(i);\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("let（块级作用域）；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for(let i = 1; i <= 5; i++){\n    setTimeout(function(){\n        console.log(i);\n    }, i*1000);\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("setTimeout 的第三个参数；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for ( var i=1; i<=5; i++) {\n    setTimeout( function timer(j) {\n        console.log( j );\n    }, i*1000, i);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"_10-浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-浅拷贝"}},[s._v("#")]),s._v(" 10. 浅拷贝")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let a = {\n    age: 1\n};\nlet b = a;\na.age = 2;\nconsole.log(b.age); // -> 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("上述例子可以发其中一方改变，另一方也会相应改变。**因为他们指向同一个引用。**我们可以使用"),a("code",[s._v("两种")]),s._v("方法解决这个问题：")])]),s._v(" "),a("ol",[a("li",[s._v("Object.assign；")]),s._v(" "),a("li",[s._v("展开运算符（...）；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let a = {\n    age: 1\n};\nlet b = Object.assign({}, a);\na.age = 2;\nconsole.log(b.age); // -> 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let a= {\n    age: 1\n}; \nlet b= {...a};\na.age = 2;\nconsole.log(b.age); // -> 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("如果我们现在在"),a("code",[s._v("a对象")]),s._v("中再加一层，看看浅拷贝是否还可以解决以上问题：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let a = {\n    age: 1,\n    jobs: {\n        first: 'alipay'\n    };\n};\nlet b = {...a};\na.jobs.first = 'tencent';\nconsole.log(b.jobs.first) // -> tencent\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("我们发现浅拷贝只是解决了第一层的问题，如果接下来的值中还有对象的话，要解决这个问题，我们就需要引入深拷贝了。")])]),s._v(" "),a("blockquote",[a("p",[s._v("关于深拷贝由于篇幅太长，可以移驾到我的另一篇 "),a("a",{attrs:{href:"deepClone"}},[s._v("深拷贝")]),s._v(" 去继续探索。")])])])}),[],!1,null,null,null);n.default=e.exports}}]);